spring.application.name=spotify-test

spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=15
server.port=8092

## PostgreSQL
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5433/spotify}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.main.allow-circular-references=true
spring.jpa.show-sql=false

# create and drop table, good for testing, production set to none or comment it
spring.jpa.hibernate.ddl-auto=update

springdoc.api-docs.path=/public/api-docs
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.path=/public/swagger-ui

spring.main.allow-bean-definition-overriding=true
logging.level.org.hibernate.persister.entity=ERROR
logging.level.org.postgresql.core=ERROR

########################## Security #############################
auth.api.url=${AUTH_URL:http://localhost:8085/auth}
token.issuer.url=${auth.api.url}/realms/find-job
token.api.url=${auth.api.url}/realms/find-job/protocol/openid-connect/token
auth.client.id=${AUTH_CLIENT_ID:job-management-client}
auth.client.secret=${AUTH_CLIENT_SECRET:ZON6rFwCLbbyRVptZBplqhNQfZVNgXt0}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${auth.api.url}/realms/find-job

spring.security.oauth2.resourceserver.opaque.introspection-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/token/introspect
spring.security.oauth2.resourceserver.opaque.introspection-client-id=${auth.client.id}
spring.security.oauth2.resourceserver.opaque.introspection-client-secret=${auth.client.secret}

########################## Spotify #############################
spotify.auth.api.url=https://accounts.spotify.com/api/token
spotify.api.url=https://api.spotify.com/v1
spotify.client.id=d8cd3d33ed4f4beba76e33e1dbefea7e
spotify.client.secret=319df75952eb4962ae07668dd778403c